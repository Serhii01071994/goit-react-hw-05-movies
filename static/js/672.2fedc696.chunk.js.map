{"version":3,"file":"static/js/672.2fedc696.chunk.js","mappings":"0JAMA,IAJqB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACtB,OAAO,cAAGC,UAAU,QAAb,SAAsBD,GAC9B,C,uJCUD,EAXuB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC/B,OACE,eAAIF,UAAU,aAAd,UACE,UAAC,KAAD,CAAMG,GAAE,kBAAaF,EAAMG,IAA3B,WACE,gBAAKC,KAAKC,EAAAA,EAAAA,IAAWL,EAAMM,aAAcC,IAAKN,KAC9C,eAAIF,UAAU,QAAd,SAAuBE,QAI9B,ECKD,EAfmB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACdC,EAAaC,MAAMC,QAAQH,IAAWA,EAAOI,OAAS,EAE5D,OACE,eAAIb,UAAU,aAAd,SACGU,GACCD,EAAOK,KAAI,SAAAb,GACT,OACE,SAAC,EAAD,CAAgBC,MAAOD,EAAMC,MAAOD,MAAOA,GAAYA,EAAMG,GAEhE,KAGR,E,SCoBD,EA7Ba,WACX,OAA4BW,EAAAA,EAAAA,UAAS,MAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGSK,EAAAA,EAAAA,MAHT,OAGVC,EAHU,OAIhBR,EAAUQ,GAJM,gDAMhBJ,EAAS,KAAMrB,SANC,yBAQhBmB,GAAa,GARG,4EAAH,qDAWjBI,GACD,GAAE,KAGD,iBAAKtB,UAAU,YAAf,UACGiB,IAAa,SAACQ,EAAA,EAAD,IACbN,IAAS,SAACO,EAAA,EAAD,CAAc3B,QAASoB,KACjC,SAAC,EAAD,CAAYV,OAAQA,MAGzB,C,uNC/BKkB,EAAU,mCACVC,EAAM,+BAKCL,EAAc,mCAAG,sGACLM,EAAAA,EAAAA,IAAA,UAClBD,EADkB,wCACiBD,IAFZ,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,qDAQdC,EAAiB,mCAAG,WAAMC,GAAN,yFACRJ,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iCACUD,EADV,kBAC2BM,IAFnB,uBACvBH,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAQjBI,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACLO,EADK,oBACcR,IAFN,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAQjBM,EAAc,mCAAG,WAAMD,GAAN,yFACLN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACLO,EADK,4BACsBR,IAFjB,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,EAAKO,MAJgB,2CAAH,sDAQdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACLO,EADK,4BACsBR,IAFd,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,EAAKC,SAJmB,2CAAH,sDAQjBzB,EAAa,SAAAC,GAAW,OACnCA,EAAW,0CAC4BA,GA7CvC,gIA2CmC,C","sources":["components/ErrorMessege/ErrorMessage.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","servises/api.js"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import { Link } from 'react-router-dom';\nimport { filmposter } from 'servises/api';\n\nconst MoviesListItem = ({ movie, title }) => {\n  return (\n    <li className=\"movie-item\">\n      <Link to={`/movies/${movie.id}`}>\n        <img src={filmposter(movie.poster_path)} alt={title} />\n        <h1 className=\"title\">{title}</h1>\n      </Link>\n    </li>\n  );\n};\n\nexport default MoviesListItem;\n","import MoviesListItem from 'components/MoviesListItem/MoviesListItem';\n\nconst MoviesList = ({ movies }) => {\n  const showMovies = Array.isArray(movies) && movies.length > 0;\n\n  return (\n    <ul className=\"moviesList\">\n      {showMovies &&\n        movies.map(movie => {\n          return (\n            <MoviesListItem title={movie.title} movie={movie} key={movie.id} />\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import ErrorMessage from 'components/ErrorMessege/ErrorMessage';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchAllMovies } from 'servises/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const moviesData = await fetchAllMovies();\n        setMovies(moviesData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <div className=\"home-list\">\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '02cdb7a51a2e3d1e8057374db8e49782';\nconst URL = 'https://api.themoviedb.org/3';\nconst default_poster =\n  'https://shop-cdn1-2.vigbo.tech/shops/126035//products/21752720/images/2-e62e01f93c697739149c01b31defa96b.jpg?version=undefined';\n\n// Запрос популярных фильмов\nexport const fetchAllMovies = async () => {\n  const { data } = await axios.get(\n    `${URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\n// Поиск фильмов по названию\nexport const fetchSearchMovies = async query => {\n  const { data } = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n\n// Детали фильма\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\n// Актерский состав\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\n// Обзоры фильма\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\n// Постер фильма\nexport const filmposter = poster_path =>\n  poster_path\n    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n    : default_poster;\n"],"names":["message","className","movie","title","to","id","src","filmposter","poster_path","alt","movies","showMovies","Array","isArray","length","map","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","fetchAllMovies","moviesData","Loader","ErrorMessage","API_KEY","URL","axios","data","results","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}