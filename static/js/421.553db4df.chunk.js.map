{"version":3,"file":"static/js/421.553db4df.chunk.js","mappings":"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","sources":["components/ErrorMessege/ErrorMessage.jsx","components/MovieCard/MovieCard.jsx","components/MoviesSearch/MoviesSearch.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","servises/api.js"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import { Link } from 'react-router-dom';\nimport { filmposter } from 'servises/api';\n\nexport const MovieCard = ({ movie, location }) => {\n  return (\n    <li className=\"movie-list\">\n      <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n        <img src={filmposter(movie.poster_path)} alt={movie.title} />\n        <p className=\"title\">{movie.title}</p>\n      </Link>\n    </li>\n  );\n};\n","import { MovieCard } from 'components/MovieCard/MovieCard';\n\nexport const MoviesSearch = ({ movies, location }) => {\n  return (\n    <ul className=\"moviesList\">\n      {movies !== null &&\n        movies.map(movie => (\n          <MovieCard key={movie.id} movie={movie} location={location} />\n        ))}\n    </ul>\n  );\n};\n","const SearchForm = ({ handleFormSubmit }) => {\n  return (\n    <div>\n      <form className=\"form\" onSubmit={handleFormSubmit}>\n        <input className=\"input\" type=\"text\" name=\"query\" required />\n        <button className=\"button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import ErrorMessage from 'components/ErrorMessege/ErrorMessage';\nimport Loader from 'components/Loader/Loader';\nimport { MoviesSearch } from 'components/MoviesSearch/MoviesSearch';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'servises/api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    const searchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const movie = await (await fetchSearchMovies(query)).results;\n        setMovies(movie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    searchMovie();\n  }, [query]);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const searchValue = e.currentTarget.elements.query.value;\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleFormSubmit} />\n      <section>\n        {isLoading && <Loader />}\n        {error && <ErrorMessage message={error} />}\n        <MoviesSearch query={query} movies={movies} location={location} />\n      </section>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '02cdb7a51a2e3d1e8057374db8e49782';\nconst URL = 'https://api.themoviedb.org/3';\nconst default_poster =\n  'https://shop-cdn1-2.vigbo.tech/shops/126035//products/21752720/images/2-e62e01f93c697739149c01b31defa96b.jpg?version=undefined';\n\n// Запрос популярных фильмов\nexport const fetchAllMovies = async () => {\n  const { data } = await axios.get(\n    `${URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\n// Поиск фильмов по названию\nexport const fetchSearchMovies = async query => {\n  const { data } = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n\n// Детали фильма\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\n// Актерский состав\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\n// Обзоры фильма\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\n// Постер фильма\nexport const filmposter = poster_path =>\n  poster_path\n    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n    : default_poster;\n"],"names":["message","className","MovieCard","movie","location","state","from","to","id","src","filmposter","poster_path","alt","title","MoviesSearch","movies","map","handleFormSubmit","onSubmit","type","name","required","useSearchParams","searchParams","setSearchParams","useLocation","useState","setMovies","isLoading","setIsLoading","error","setError","query","get","useEffect","searchMovie","fetchSearchMovies","results","e","preventDefault","searchValue","currentTarget","elements","value","Loader","ErrorMessage","API_KEY","URL","fetchAllMovies","axios","data","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}